name: AI Code Review

on:
  push:
    branches-ignore:
      - main  # main 브랜치를 제외하고 다른 브랜치에서 푸시될 때만 실행

jobs:
  code_review:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run AI Code Review
      id: review_step
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}  # OpenAI API 키 설정
      run: |
        # 현재 브랜치명 동적으로 가져오기
        branch_name=$(git rev-parse --abbrev-ref HEAD)

        # 원격 브랜치(origin/브랜치명)와 로컬 HEAD 사이의 변경점 확인
        git fetch origin  # 원격 저장소의 최신 정보 가져오기
        git diff --name-only origin/$branch_name...HEAD > changed_files.txt  # 변경 파일 목록 추출

        # 변경된 파일이 있을 때만 Python 스크립트 실행
        if [ -s changed_files.txt ]; then
          python .github/scripts/review_code.py > review_output.txt || echo "Python script failed"
          
          # 리뷰 결과를 현재 커밋에 코멘트로 남김
          commit_sha=$(git rev-parse HEAD)
          review=$(cat review_output.txt | sed ':a;N;$!ba;s/\n/\\n/g' | sed 's/"/\\"/g')
          response=$(curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"body\": \"$review\"}" \
            https://api.github.com/repos/${{ github.repository }}/commits/${commit_sha}/comments)
          echo "Response: $response"
        fi

